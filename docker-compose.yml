version: '3.8'

services:
  server-normal:
    image: test-socket_server-normal:latest
    restart: unless-stopped
    ports:
      - "3005:3005"
    deploy:
      resources:
        limits:
          cpus: '2'
          memory: 1500M
        reservations:
          cpus: '2'
          memory: 1250M
    networks:
      - app-network

  server-alternate:
    image: test-socket_server-alternate:latest
    restart: unless-stopped
    ports:
      - "3006:3006"
    networks:
      - app-network
    deploy:
      resources:
        limits:
          cpus: '0.3'
          memory: 1500M
        reservations:
          cpus: '0.2'
          memory: 1250M

  server-cluster:
    image: test-socket_server-cluster:latest
    restart: unless-stopped
    ports:
      - "3007:3007"
    networks:
      - app-network
    deploy:
      resources:
        limits:
          cpus: '2'
          memory: 1500M
        reservations:
          cpus: '2'
          memory: 1250M

  api:
    image: test-socket_api:latest
    restart: unless-stopped
    ports:
      - "3004:3004"
    networks:
      - app-network
    deploy:
      mode: replicated
      replicas: 20
      endpoint_mode: vip

  prometheus:
    image: prom/prometheus:latest
    ports:
      - 9090:9090
    command:
      - --config.file=/etc/prometheus/prometheus.yml
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml:ro
    depends_on:
      - cadvisor

  cadvisor:
    image: google/cadvisor:latest
    ports:
      - 8080:8080
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:rw
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
    depends_on:
      - redis
      - server-normal
      - server-alternate
      - server-cluster
      - api

  redis:
    image: redis:latest
    container_name: redis
    ports:
      - 6379:6379

networks:
  app-network:
    driver: overlay
